@{
    ViewData["Title"] = "Trao đổi với nhà tuyển dụng";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />

<style>
    body {
        background-color: #f4f6f9;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
    }

    .chat-card {
        border-radius: 15px;
        overflow: hidden;
        border: none;
    }

    .chat-header {
        border-bottom: none;
        font-size: 16px;
        font-weight: 600;
    }

    #chatBox {
        background-color: #ffffff;
        padding: 15px;
        border-radius: 0 0 15px 15px;
    }

    .chat-bubble {
        padding: 10px 15px;
        border-radius: 18px;
        font-size: 14px;
        max-width: 70%;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        word-wrap: break-word;
    }

        .chat-bubble.me {
            background-color: #0d6efd;
            color: white;
            align-self: flex-end;
        }

        .chat-bubble.them {
            background-color: #e9ecef;
            color: #212529;
            align-self: flex-start;
        }

    .message-time {
        font-size: 12px;
        color: gray;
        margin-top: 3px;
    }

    #messageInput {
        border-radius: 20px;
        padding: 10px 15px;
    }

    #sendButton {
        border-radius: 50%;
        width: 45px;
        height: 45px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>

<div class="container py-4">
    <div class="card chat-card shadow-sm">
        <div class="card-header bg-primary text-white d-flex align-items-center chat-header">
            <i class="fas fa-comments me-2"></i>
            Trao đổi với <span class="ms-1">@ViewBag.EmployerName</span>
            <span class="fw-normal ms-1">về</span>
            <em class="ms-1">"@ViewBag.PositionTitle"</em>
        </div>
        <div class="card-body d-flex flex-column" id="chatBox" style="height: 450px; overflow-y: auto;">
            <div id="messagesList" class="d-flex flex-column gap-2"></div>
        </div>
        <div class="card-footer bg-light">
            <div class="input-group">
                <input type="text" id="messageInput" class="form-control" placeholder="Nhập tin nhắn..." />
                <button class="btn btn-success" id="sendButton">
                    <i class="fas fa-paper-plane"></i>
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>
    <script>
        const userId = '@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value';
        const conversationId = parseInt('@ViewBag.ConversationId');
        let connectionStarted = false;

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        function scrollToBottom() {
            const chatBox = document.getElementById("chatBox");
            chatBox.scrollTop = chatBox.scrollHeight;
        }

        // ✅ Hiển thị tin nhắn realtime
        connection.on("ReceiveMessage", function (senderId, message, time) {
            const bubbleClass = senderId == userId ? "chat-bubble me align-self-end" : "chat-bubble them align-self-start";
            const msgHtml = `
                <div class="${bubbleClass}">
                    ${message}
                    <div class="message-time">${time}</div>
                </div>`;
            document.getElementById("messagesList").innerHTML += msgHtml;
            scrollToBottom();
        });

        async function sendMessage() {
            const input = document.getElementById("messageInput");
            const message = input.value.trim();
            if (!message) return;

            if (!connectionStarted) {
                console.warn("⚠️ Kết nối chưa sẵn sàng!");
                return;
            }

            try {
                await connection.invoke("SendMessage", conversationId, message);
                input.value = "";
            } catch (err) {
                console.error("❌ Lỗi khi gửi tin nhắn:", err);
            }
        }

        document.getElementById("sendButton").addEventListener("click", sendMessage);
        document.getElementById("messageInput").addEventListener("keypress", function (e) {
            if (e.key === "Enter" && !e.shiftKey) {
                e.preventDefault();
                sendMessage();
            }
        });

        connection.start().then(() => {
            connectionStarted = true;
            console.log("✅ ChatHub connected!");

            fetch(`/Messages/GetMessages?conversationId=${conversationId}`)
                .then(res => res.json())
                .then(messages => {
                    const list = document.getElementById("messagesList");
                    list.innerHTML = "";
                    messages.forEach(m => {
                        const bubbleClass = m.senderUserId == userId ? "chat-bubble me" : "chat-bubble them";

                        // Chuyển đổi giờ sang local time
                        const localTime = new Date(m.sentAt).toLocaleString("vi-VN", {
                            hour: "2-digit",
                            minute: "2-digit",
                            day: "2-digit",
                            month: "2-digit"
                        });

                        const msgHtml = `
                            <div class="${bubbleClass}">
                                ${m.messageText}
                                <div class="message-time">${localTime}</div>
                            </div>`;
                        list.innerHTML += msgHtml;
                    });
                    scrollToBottom();
                });
        }).catch(err => console.error("❌ Lỗi kết nối:", err));
    </script>
}
